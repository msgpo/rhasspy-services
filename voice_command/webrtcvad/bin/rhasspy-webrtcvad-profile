#!/usr/bin/env bash

# Profile wrapper around rhasspy-webrtcvad

if [[ -z "${rhasspy_dir}" ]]; then
    export rhasspy_dir='/usr/lib/rhasspy'
fi

# -----------------------------------------------------------------------------
# Command-line Arguments
# -----------------------------------------------------------------------------

. "${rhasspy_dir}/etc/shflags"

DEFINE_string 'profile' '' 'Path to profile directory' 'p'

# webrtcvad
DEFINE_integer 'vad-mode' 1 'Sensitivity (1-3, 3 is most sensitive)'
DEFINE_float 'min-seconds' 2 'Minimum number of seconds a voice command must last'
DEFINE_float 'max-seconds' 30 'Maximum number of seconds a voice command can last'
DEFINE_float 'speech-seconds' '0.5' 'Seconds of speech before voice command is considered started'
DEFINE_float 'silence-seconds' '0.5' 'Seconds of silence before voice command is considered stopped'
DEFINE_integer 'chunk-size' 960 'Number of bytes to process at a time'
DEFINE_boolean 'debug' false 'Print DEBUG messages to console'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# -----------------------------------------------------------------------------
# Default Settings
# -----------------------------------------------------------------------------

set -e

profile_dir="${FLAGS_profile}"

vad_mode="${FLAGS_vad_mode}"
min_seconds="${FLAGS_min_seconds}"
max_seconds="${FLAGS_max_seconds}"
speech_seconds="${FLAGS_speech_seconds}"
silence_seconds="${FLAGS_silence_seconds}"
chunk_size="${FLAGS_chunk_size}"

if [[ "${FLAGS_debug}" -eq "${FLAGS_TRUE}" ]]; then
    debug='--debug'
fi

# -----------------------------------------------------------------------------
# Profile
# -----------------------------------------------------------------------------

if [[ ! -z "${profile_dir}" ]]; then
    export profile_dir="$(realpath "${profile_dir}")"
    source <(rhasspy-yq "${profile_dir}/profile.yml" \
                        -q vad_mode 'voice-command.webrtcvad.vad-mode' "${vad_mode}" \
                        -q min_seconds 'voice-command.webrtcvad.min-seconds' "${min_seconds}" \
                        -q max_seconds 'voice-command.webrtcvad.max-seconds' "${max_seconds}" \
                        -q speech_seconds 'voice-command.webrtcvad.speech-seconds' "${speech_seconds}" \
                        -q silence_seconds 'voice-command.webrtcvad.silence-seconds' "${silence_seconds}" \
                        -q chunk_size 'voice-command.webrtcvad.chunk-size' "${chunk_size}" | \
                 tee /dev/stderr)
fi

# -----------------------------------------------------------------------------

args=("${debug}")

if [[ ! -z "${vad_mode}" ]]; then
    args+=('--vad-mode' "${vad_mode}")
fi

if [[ ! -z "${min_seconds}" ]]; then
    args+=('--min-seconds' "${min_seconds}")
fi

if [[ ! -z "${max_seconds}" ]]; then
    args+=('--max-seconds' "${max_seconds}")
fi

if [[ ! -z "${speech_seconds}" ]]; then
    args+=('--speech-seconds' "${speech_seconds}")
fi

if [[ ! -z "${silence_seconds}" ]]; then
    args+=('--silence-seconds' "${silence_seconds}")
fi

if [[ ! -z "${chunk_size}" ]]; then
    args+=('--chunk-size' "${chunk_size}")
fi

args+=("$@")

# -----------------------------------------------------------------------------

rhasspy-webrtcvad "${args[@]}"
