#!/usr/bin/env bash

if [[ -z "${rhasspy_dir}" ]]; then
    export rhasspy_dir='/usr/lib/rhasspy'
fi

# -----------------------------------------------------------------------------
# Command-line Arguments
# -----------------------------------------------------------------------------

. "${rhasspy_dir}/etc/shflags"

DEFINE_string 'profile' '' 'Path to profile directory' 'p'

# MQTT
DEFINE_string 'mqtt-host' '127.0.0.1' 'MQTT server address'
DEFINE_integer 'mqtt-port' 1883 'MQTT server port'
DEFINE_string 'mqtt-topic' 'rhasspy/voice-command/#' 'MQTT topic to subscribe to'

# Audio
DEFINE_string 'audio-host' '0.0.0.0' 'Host for UDP audio input stream'
DEFINE_integer 'audio-port' 12201 'Port for UDP audio input stream'

# Events
DEFINE_string 'start-listening' 'rhasspy/voice-command/start-listening' 'Topic to start listening to audio stream'
DEFINE_string 'speech' 'rhasspy/voice-command/speech' 'Topic for when speech is detected'
DEFINE_string 'silence' 'rhasspy/voice-command/silence' 'Topic for when silence is detected'
DEFINE_string 'command-started' 'rhasspy/voice-command/command-started' 'Topic for when voice command starts'
DEFINE_string 'command-stopped' 'rhasspy/voice-command/command-stopped' 'Topic for when voice command stops'
DEFINE_string 'command-timeout' 'rhasspy/voice-command/command-timeout' 'Topic for when voice command times out'

# webrtcvad
DEFINE_boolean 'debug' false 'Print DEBUG messages to console'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# -----------------------------------------------------------------------------
# Default Settings
# -----------------------------------------------------------------------------

set -e

profile_dir="${FLAGS_profile}"

mqtt_host="${FLAGS_mqtt_host}"
mqtt_port="${FLAGS_mqtt_port}"
mqtt_topic="${FLAGS_mqtt_topic}"

audio_host="${FLAGS_audio_host}"
audio_port="${FLAGS_audio_port}"

if [[ "${FLAGS_debug}" -eq "${FLAGS_TRUE}" ]]; then
    debug='--debug'
fi

# -----------------------------------------------------------------------------
# Profile
# -----------------------------------------------------------------------------

if [[ ! -z "${profile_dir}" ]]; then
    export profile_dir="$(realpath "${profile_dir}")"
    source <(rhasspy-yq "${profile_dir}/profile.yml" \
                        -q mqtt_host 'mqtt.host' "${mqtt_host}" \
                        -q mqtt_port 'mqtt.port' "${mqtt_port}" \
                        -q mqtt_topic 'mqtt.topic' "${mqtt_topic}" \
                        -q audio_host 'voice-command.audio-input.host' "${audio_host}" \
                        -q audio_port 'voice-command.audio-input.port' "${audio_port}" | \
                 tee /dev/stderr)
fi

# -----------------------------------------------------------------------------

args=("${debug}")
args+=("$@")

if [[ ! -z "${debug}" ]]; then
    echo "Expecting UDP audio stream at ${audio_host}:${audio_port}"
fi

nc -ukl "${audio_host}" -p "${audio_port}" | \
    rhasspy-webrtcvad \
        "${args[@]}" \
        --events-in-file <(rhasspy-jsonl-sub -h "${mqtt_host}" -p "${mqtt_port}" -v -t "${mqtt_topic}") | \
    while read -r topic payload;
    do
        mosquitto_pub -h "${mqtt_host}" -p "${mqtt_port}" -t "${topic}" -m "${payload}"
    done
