#!/usr/bin/env bash

export rhasspy_dir='/usr/lib/rhasspy'

# -----------------------------------------------------------------------------
# Command-line Arguments
# -----------------------------------------------------------------------------

. "${rhasspy_dir}/etc/shflags"

DEFINE_string 'profile' '' 'Path to profile directory' 'p'

DEFINE_string 'http-host' '0.0.0.0' 'HTTP server address'
DEFINE_integer 'http-port' 8000 'HTTP server port'

# pocketsphinx
DEFINE_boolean 'debug' false 'Print DEBUG messages to console'
DEFINE_string 'acoustic-model' '' 'Path to pocketsphinx acoustic model directory (hmm)'
DEFINE_string 'language-model' '' 'Path to pocketsphinx ARPA language model (lm)'
DEFINE_string 'dictionary' '' 'Path to pocketsphinx pronunciation dictionary (dict)'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# -----------------------------------------------------------------------------
# Default Settings
# -----------------------------------------------------------------------------

set -e

profile_dir="${FLAGS_profile}"

http_host="${FLAGS_http_host}"
http_port="${FLAGS_http_port}"

if [[ "${FLAGS_debug}" -eq "${FLAGS_TRUE}" ]]; then
    debug='--debug'
fi

acoustic_model="${FLAGS_acoustic_model}"
language_model="${FLAGS_language_model}"
dictionary="${FLAGS_dictionary}"

# -----------------------------------------------------------------------------
# Profile
# -----------------------------------------------------------------------------

if [[ ! -z "${profile_dir}" ]]; then
    profile_dir="$(realpath "${profile_dir}")"
    export profile_dir
    source <(rhasspy-yq "${profile_dir}/profile.yml" \
                        -q http_host http.host "${http_host}" \
                        -q http_port http.port "${http_port}" \
                        -q acoustic_model speech-to-text.pocketsphinx.acoustic-model "${acoustic_model}" \
                        -q language_model speech-to-text.pocketsphinx.language-model "${language_model}" \
                        -q dictionary speech-to-text.pocketsphinx.dictionary "${dictionary}" | \
                 tee /dev/stderr)
fi

# -----------------------------------------------------------------------------

args=("${debug}")

if [[ ! -z "${acoustic_model}" ]]; then
    args+=('--acoustic-model' "${acoustic_model}")
fi

if [[ ! -z "${language_model}" ]]; then
    args+=('--language-model' "${language_model}")
fi

if [[ ! -z "${dictionary}" ]]; then
    args+=('--dictionary' "${dictionary}")
fi

args+=("$@")

# -----------------------------------------------------------------------------
# Temp Files and FIFOs
# -----------------------------------------------------------------------------

temp_dir="$(mktemp -d)"

function finish {
    rm -rf "${temp_dir}"
}

trap finish EXIT

events_fifo="${temp_dir}/events"
audio_fifo="${temp_dir}/audio"

mkfifo "${events_fifo}"
mkfifo "${audio_fifo}"

# -----------------------------------------------------------------------------

rhasspy-pocketsphinx "${args[@]}" \
             --audio-file "${audio_fifo}" \
             --audio-file-lines \
             --events-in-file "${events_fifo}" \
             --event-start 'start-listening' \
             --event-stop 'stop-listening' | \
    tee /dev/stderr | \
    "${rhasspy_dir}/pocketsphinx-http/pocketsphinx-http" \
            --host "${http_host}" --port "${http_port}" \
            --audio-file "${audio_fifo}" \
            --events-file "${events_fifo}" "${debug}"
