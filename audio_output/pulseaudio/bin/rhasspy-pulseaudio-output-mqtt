#!/usr/bin/env bash

if [[ -z "${rhasspy_dir}" ]]; then
    export rhasspy_dir='/usr/lib/rhasspy'
fi

# -----------------------------------------------------------------------------
# Command-line Arguments
# -----------------------------------------------------------------------------

. "${rhasspy_dir}/etc/shflags"

DEFINE_string 'profile' '' 'Path to profile directory' 'p'

# MQTT
DEFINE_string 'mqtt-host' '127.0.0.1' 'MQTT server address'
DEFINE_integer 'mqtt-port' 1883 'MQTT server port'
DEFINE_string 'mqtt-topic' 'rhasspy/audio-output/#' 'MQTT topic to subscribe to'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# -----------------------------------------------------------------------------
# Default Settings
# -----------------------------------------------------------------------------

set -e

profile_dir="${FLAGS_profile}"

mqtt_host="${FLAGS_mqtt_host}"
mqtt_port="${FLAGS_mqtt_port}"
mqtt_topic="${FLAGS_mqtt_topic}"

# -----------------------------------------------------------------------------
# Profile
# -----------------------------------------------------------------------------

if [[ ! -z "${profile_dir}" ]]; then
    export profile_dir
    source <(rhasspy-yq "${profile_dir}/profile.yml" \
                        -q mqtt_host 'mqtt.host' "${mqtt_host}" \
                        -q mqtt_port 'mqtt.port' "${mqtt_port}" \
                        -q mqtt_topic 'audio-output.mqtt.topic' "${mqtt_topic}" | \
                 tee /dev/stderr)
fi

# -----------------------------------------------------------------------------
# MQTT Events
# -----------------------------------------------------------------------------

event_prefix='rhasspy/audio-output'

# Input
event_play="${event_prefix}/play-uri"

# Output
event_played="${event_prefix}/uri-played"

# -----------------------------------------------------------------------------

# Disable automatic exit on error
set +e

rhasspy-jsonl-sub -h "${mqtt_host}" -p "${mqtt_port}" -v -t "${mqtt_topic}" | \
    while read -r topic json;
    do
        # Split topic by /
        IFS='/'
        read -ra topic_parts <<< "${topic}"
        base_topic="${topic_parts[*]:0:3}"
        request_id="${topic_parts[*]:3}"

        # Need to restore this
        IFS=' '

        if [[ ! -z "${request_id}" ]]; then
            request_id="/${request_id}"
        fi

        if [[ "${base_topic}" == "${event_play}" ]]; then
            # Extract URI
            uri="$(echo -n "${json}" | jq '.uri')"

            if [[ ! -z "${uri}" ]]; then
                echo "${uri}"

                # Play URI through speakers
                gst-launch-1.0 -q \
                               uridecodebin uri="${uri}" ! \
                               pulsesink
            fi

            # Report that playback is complete
            mosquitto_pub -h "${mqtt_host}" -p "${mqtt_port}" \
                          -t "${event_played}${request_id}" -m "${json}"
        fi
    done
