#!/usr/bin/env python3
import sys
import argparse
import json
from collections import defaultdict


def main():
    parser = argparse.ArgumentParser("rhasspy-intent-error")
    parser.add_argument(
        "--expected", required=True, help="Path to JSON with expected intents"
    )
    parser.add_argument(
        "--actual", required=True, help="Path to JSON with actual intents"
    )
    args, _ = parser.parse_known_args()

    # -------------------------------------------------------------------------

    with open(args.expected, "r") as expected_file:
        expected = json.load(expected_file)

    with open(args.actual, "r") as actual_file:
        actual = json.load(actual_file)

    num_intents = len(expected)
    correct_intents = 0

    num_entities = 0
    correct_entities = 0
    correct_intent_entities = 0
    missing_entities = 0
    extra_entities = 0

    for key, expected_intent in expected.items():
        actual_intent = actual[key]
        intents_match = (
            expected_intent["intent"]["name"] == actual_intent["intent"]["name"]
        )

        if intents_match:
            correct_intents += 1

        # Gather expected entities
        expected_entities = defaultdict(list)
        for entity_dict in expected_intent["entities"]:
            num_entities += 1
            expected_entities[entity_dict["entity"]].append(entity_dict["value"])

        missing_entity_names = set(expected_entities.keys())

        # Check actual entities
        for entity_dict in actual_intent["entities"]:
            entity_name = entity_dict["entity"]
            entity_value = entity_dict["value"]

            if entity_name in expected_entities:
                missing_entity_names.discard(entity_name)

                if entity_value in expected_entities[entity_name]:
                    # Values match
                    correct_entities += 1
                    expected_entities[entity_name].remove(entity_value)

                    if intents_match:
                        correct_intent_entities += 1
            else:
                # Actual entity that was not in expected set
                extra_entities += 1

            # Any leftover expected entities are considered missing
            missing_entities = len(missing_entity_names)

    # -------------------------------------------------------------------------

    result = {
        "num_intents": num_intents,
        "correct_intents": correct_intents,
        "intent_error": 100 * (1 - (correct_intents / num_intents)),
        "num_entities": num_entities,
        "correct_entities": correct_entities,
        "missing_entities": missing_entities,
        "extra_entities": extra_entities,
        "entity_error": 100 * (1 - (correct_entities / num_entities)),
        "correct_intent_entities": correct_intent_entities,
        "intent_entity_error": 100 * (1 - (correct_intent_entities / num_entities)),
    }

    json.dump(result, sys.stdout)


# -----------------------------------------------------------------------------

if __name__ == "__main__":
    main()
