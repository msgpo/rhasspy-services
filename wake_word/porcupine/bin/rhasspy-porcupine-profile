#!/usr/bin/env bash

# Profile wrapper around rhasspy-porcupine

if [[ -z "${rhasspy_dir}" ]]; then
    export rhasspy_dir='/usr/lib/rhasspy'
fi

# -----------------------------------------------------------------------------
# Command-line Arguments
# -----------------------------------------------------------------------------

. "${rhasspy_dir}/etc/shflags"

DEFINE_string 'profile' '' 'Path to profile directory' 'p'

# porcupine
DEFINE_boolean 'debug' false 'Print DEBUG messages to console'
DEFINE_string 'library' "${porcupine_library}" 'Path to libpv_porcupine.so'
DEFINE_string 'model' "${porcupine_model}" 'Path to porcupine_params.pv'
DEFINE_string 'keyword' "${porcupine_keyword}" 'Path to keyword file (.ppn)'
DEFINE_boolean 'auto-start' false 'Start listening immediately'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# -----------------------------------------------------------------------------
# Default Settings
# -----------------------------------------------------------------------------

set -e

profile_dir="${FLAGS_profile}"

library="${FLAGS_library}"
model="${FLAGS_model}"
keyword="${FLAGS_keyword}"

if [[ "${FLAGS_debug}" -eq "${FLAGS_TRUE}" ]]; then
    debug='--debug'
fi

if [[ "${FLAGS_auto_start}" -eq "${FLAGS_TRUE}" ]]; then
    auto_start='true'
fi

# -----------------------------------------------------------------------------
# Profile
# -----------------------------------------------------------------------------

if [[ ! -z "${profile_dir}" ]]; then
    export profile_dir="$(realpath "${profile_dir}")"
    source <(rhasspy-yq "${profile_dir}/profile.yml" \
                        -q auto_start 'wake-word.porcupine.auto-start' "${auto_start}" \
                        -q library 'wake-word.porcupine.library' "${library}" \
                        -q model 'wake-word.porcupine.model' "${model}" \
                        -q keyword 'wake-word.porcupine.keyword' "${keyword}" | \
                 tee /dev/stderr)
fi

# -----------------------------------------------------------------------------

args=("${debug}")

if [[ ! -z "${auto_start}" ]]; then
    args+=('--auto-start')
fi

if [[ ! -z "${library}" ]]; then
    args+=('--library' "${library}")
else
    # Look for libpv_porcupine.so in both the profile and base Rhasspy directory
    library_path='wake_word/porcupine/lib/x86_64/libpv_porcupine.so'
    if [[ -f "${profile_dir}/${library_path}" ]]; then
        args+=('--library' "${profile_dir}/${library_path}")
    else
        args+=('--library' "${rhasspy_dir}/${library_path}")
    fi
fi

if [[ ! -z "${model}" ]]; then
    args+=('--model' "${model}")
else
    # Look for porcupine_params.pv in both the profile and base Rhasspy directory
    model_path='wake_word/porcupine/lib/common/porcupine_params.pv'
    if [[ -f "${profile_dir}/${model_path}" ]]; then
        args+=('--model' "${profile_dir}/${model_path}")
    else
        args+=('--model' "${rhasspy_dir}/${model_path}")
    fi
fi

if [[ ! -z "${keyword}" ]]; then
    args+=('--keyword' "${keyword}")
else
    # Look for porcupine_linux.ppn in both the profile and base Rhasspy directory
    keyword_path='wake_word/porcupine/resources/keyword_files/linux/porcupine_linux.ppn'
    if [[ -f "${profile_dir}/${keyword_path}" ]]; then
        args+=('--keyword' "${profile_dir}/${keyword_path}")
    else
        args+=('--keyword' "${rhasspy_dir}/${keyword_path}")
    fi
fi

args+=("$@")

if [[ ! -z "${debug}" ]]; then
    echo "Expecting UDP audio stream at ${audio_host}:${audio_port}"
fi

# -----------------------------------------------------------------------------

nc -ukl "${audio_host}" -p "${audio_port}" | \
    rhasspy-porcupine \
        "${args[@]}" \
        --events-in-file <(mosquitto_sub -h "${mqtt_host}" -p "${mqtt_port}" -v -t "${mqtt_topic}") | \
    tee /dev/stderr | \
    while read -r topic payload;
    do
        mosquitto_pub -h "${mqtt_host}" -p "${mqtt_port}" -t "${topic}" -m "${payload}"
    done
