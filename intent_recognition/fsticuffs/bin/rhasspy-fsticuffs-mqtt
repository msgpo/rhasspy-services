#!/usr/bin/env bash

if [[ -z "${rhasspy_dir}" ]]; then
    export rhasspy_dir='/usr/lib/rhasspy'
fi

# -----------------------------------------------------------------------------
# Command-line Arguments
# -----------------------------------------------------------------------------

. "${rhasspy_dir}/etc/shflags"

DEFINE_string 'profile' '' 'Path to profile directory' 'p'

# MQTT
DEFINE_string 'mqtt-host' '127.0.0.1' 'MQTT server address'
DEFINE_integer 'mqtt-port' 1883 'MQTT server port'

# Events
DEFINE_string 'recognize-intent' 'rhasspy/intent-recognition/recognize-intent' 'Topic for intent recognition request'
DEFINE_string 'intent-recognized' 'rhasspy/intent-recognition/intent-recognized' 'Topic for intent recognition response'

# fsticuffs
DEFINE_boolean 'debug' false 'Print DEBUG messages to console'
DEFINE_string 'intent-fst' '' 'Path to intent finite state transducer'
DEFINE_boolean 'skip-unknown' false 'Skip tokens not present in FST input symbol table'
DEFINE_boolean 'fuzzy' false 'Use fuzzy search (slower)'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# -----------------------------------------------------------------------------
# Default Settings
# -----------------------------------------------------------------------------

set -e

profile_dir="${FLAGS_profile}"

mqtt_host="${FLAGS_mqtt_host}"
mqtt_port="${FLAGS_mqtt_port}"

intent_fst="${FLAGS_intent_fst}"

if [[ "${FLAGS_debug}" -eq "${FLAGS_TRUE}" ]]; then
    debug='--debug'
fi

if [[ "${FLAGS_skip_unknown}" -eq "${FLAGS_TRUE}" ]]; then
    skip_unknown='true'
fi

if [[ "${FLAGS_fuzzy}" -eq "${FLAGS_TRUE}" ]]; then
    fuzzy='true'
fi

recognize_intent="${FLAGS_recognize_intent}"
intent_recognized="${FLAGS_intent_recognized}"

# -----------------------------------------------------------------------------
# Profile
# -----------------------------------------------------------------------------

if [[ ! -z "${profile_dir}" ]]; then
    export profile_dir="$(realpath "${profile_dir}")"
    source <(rhasspy-yq "${profile_dir}/profile.yml" \
                        -q mqtt_host 'mqtt.host' "${mqtt_host}" \
                        -q mqtt_port 'mqtt.port' "${mqtt_port}" \
                        -q intent_fst 'intent-recognition.fsticuffs.intent-fst' "${intent_fst}" \
                        -q skip_unknown 'intent-recognition.fsticuffs.skip-unknown' "${skip_unknown}" \
                        -q fuzzy 'intent-recognition.fsticuffs.fuzzy' "${fuzzy}" \
                        -q recognize_intent 'intent-recognition.mqtt-events.recognize-intent' "${recognize_intent}" \
                        -q intent_recognized 'intent-recognition.mqtt-events.intent-recognized' "${intent_recognized}" | \
                 tee /dev/stderr)
fi

# -----------------------------------------------------------------------------

args=("${debug}")

if [[ ! -z "${intent_fst}" ]]; then
    args+=('--intent-fst' "${intent_fst}")
fi

if [[ ! -z "${skip_unknown}" ]]; then
    args+=('--skip-unknown')
fi

if [[ ! -z "${fuzzy}" ]]; then
    args+=('--fuzzy')
fi

args+=("$@")

mosquitto_sub -h "${mqtt_host}" -p "${mqtt_port}" -t "${recognize_intent}" | \
    rhasspy-fsticuffs "${args[@]}" | \
    tee /dev/stderr | \
    mosquitto_pub -h "${mqtt_host}" -p "${mqtt_port}" -l -t "${intent_recognized}"
